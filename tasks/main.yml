---
- name: Ensure config directory
  file:
    state: directory
    path: "{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - "{{ alertmanager_config_dir }}"
    - "{{ alertmanager_config_dir }}/template"

- name: Ensure notification template config
  copy:
    src: template/telegram.tmpl
    dest: "{{ alertmanager_config_dir }}/template/telegram.tmpl"
    mode: 0644
    owner: root
    group: root
  notify:
    - Reload alertmanager
  register: template_config

- name: Ensure configuration file
  template:
    src: alertmanager.yml.j2
    dest: "{{ alertmanager_config_dir }}/alertmanager.yml"
    mode: 0755
    owner: root
    group: root
  notify:
    - Reload alertmanager
  register: alertmanager_config

- name: Start docker alertmanager container
  community.docker.docker_compose_v2:
    state: "{{ 'restarted' if alertmanager_config.changed else 'present' }}"
    project_name: alertmanager
    definition:
      services:
        alertmanager:
          image: "{{ alertmanager_docker_image }}"
          container_name: "{{ alertmanager_container_name }}"
          command: "{{ alertmanager_command }}"
          ports:
            - "127.0.0.1:9093:9093"
            - "127.0.0.1:9094:9094"
            - "127.0.0.1:9094:9094/udp"
          volumes:
            - "{{ alertmanager_config_dir }}/:/etc/alertmanager"
          hostname: "{{ alertmanager_container_name }}"
          restart: always
          labels: "{{ alertmanager_docker_labels }}"
      networks:
        default:
          external: true
          name: "{{ alertmanager_docker_network_name }}"
  when: not alertmanager_swarm_cluster or vm_swarm_manager is undefined

- name: Deploy alertmanager to docker swarm
  block:
    - name: Ensure pip installation
      package:
        name: "python3-pip"
        state: present

    - name: Install newer version of pip itself
      pip:
        name: "pip"
        state: latest
        executable: pip3

    - name: Install jsondiff from pip
      pip:
        name: "jsondiff"
        state: present
        executable: pip3

    - name: Deploy docker alertmanager container in swarm
      community.docker.docker_stack:
        state: present
        name: "{{ alertmanager_stack_name }}"
        compose:
          - version: '3.5'
            services:
              alertmanager:
                image: "{{ alertmanager_docker_image }}"
                command: "{{ alertmanager_command }}"
                hostname: "{{ alertmanager_container_name }}"
                labels: "{{ alertmanager_docker_labels }}"
                volumes:
                  - "{{ alertmanager_config_dir }}/:/etc/alertmanager"
                deploy: "{{ alertmanager_swarm_deploy }}"
                ports:
                  - "9093:9093"
                  - "9094:9094"
                  - "9094:9094/udp"
            networks:
              default:
                external:
                  name: "{{ alertmanager_docker_network_name }}"
  delegate_to: "{{ vm_swarm_manager }}"
  when:
    - alertmanager_swarm_cluster
    - vm_swarm_manager is defined
